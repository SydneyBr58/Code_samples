Let users manually enter data from a dashboard is not possible from all data visualization software (at least not with Power BI
or Google Data Studio). However it can be handy to allow users to summit comments to a dashboard. I will briefly describe the approach
I used to tackle this task. 

First the technology: as I used a commercial software, I could not hard code a submission form into the dashboard. The main point was
to combine all information into the dashboard, so developing a separate app was not considered.

A simple solution, in my opinion, is to use Google Form to allow the users to submit data. Through the form, we can enforce constraints
on the data types available and get a timestamp of when the data were submitted. The answers are also saved on a Google Sheet which can be
easily read with an API, for instance to save the comments on a SQL database. Then we need to display on the dashboards the comments
that have just been entered.

An interesting feature of Google Form is the pre-filled form. For instance, if some fields are repetitive, they can be filled in in advance.
The pre-filled information are passed to the form with an url. In this way, we can generate dynamically all kind of pre-filled form by
concatenating different values. It is also handy to give a unique index to each comment so that they can be matched with other
datasets, as you guessed it, you can do it via the url. 

Now that we have made a connection from the dashboard to the form, we need to make the connection from the answers to the form to the 
dataset which is displayed. I have done it through a short Python script reading from the Google Sheet containing all the answers and saving
them on a separate table on a SQL database. This table is joined with the rest of the dataset displayed on the dashboad.

Pro: quick, cheap, almost invisible to the end user (the form opens on a new tab on the web browser but that's it)

Cons: piling up multiple techs, which in theory increases the likelihood of failure (Occam's razor). Extra complexity to maintain
but you can set up error messages to locate the issue easily. Extra time to explain it to others: you need to draw a diagram
to explain a very basic feature...
